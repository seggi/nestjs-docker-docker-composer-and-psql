version: '3.8'

services:
  dev:
    container_name: ${CONTAINER_NAME}
    image: ${REGISTRY_NAME}/${CONTAINER_NAME}:${CONTAINER_VERSION}
    build:
      context: .
      target: development
      dockerfile: Dockerfile
    command: sh -c "yarn start:debug"
    volumes:
      - ./:/usr/src/app/
      - /usr/src/app/node_modules
    ports:
      - ${PORT}:3000
      - 9000:9000
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - db

  prod:
    container_name: ${CONTAINER_NAME}
    image: ${REGISTRY_NAME}/${CONTAINER_NAME}:${CONTAINER_VERSION}
    build:
      context: .
      target: production
      dockerfile: Dockerfile
    command: npm run start:prod
    ports:
      - ${PORT}:3000
      - 9000:9000
    volumes:
      - ./:/usr/src/app/
      - /usr/src/app/node_modules
    env_file:
      - ./.env
    restart: unless-stopped

  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"

volumes:
  postgres_data: null
